// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "Commands/ToggleLiftSolenoidCommand.h"
#include "Commands/CloseGripCommand.h"
#include "Commands/DropDownCommand.h"
#include "Commands/LiftUpCommand.h"
#include "Commands/OpenGripCommand.h"
#include "Commands/ToggleGripCommand.h"
#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveCommand.h"
#include "UtilFun.h"

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

OI::OI()

{
	// Process operator interface input here.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

     

        // SmartDashboard Buttons
	SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

	SmartDashboard::PutData("DriveCommand", new DriveCommand());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

	driveJoystick = new Joystick(0);

	gantryControler = new Joystick(1);

	fireLiftSolenoidButton = new JoystickButton(gantryControler, 1);
	liftUpButton = new JoystickButton(gantryControler, 2);
	dropDownButton = new JoystickButton(gantryControler, 3);
	openGripButton = new JoystickButton(gantryControler, 4);
	closeGripButton = new JoystickButton(gantryControler, 5);
	ToggleGripButton = new JoystickButton(gantryControler, 6);

	fireLiftSolenoidButton->WhenPressed(new ToggleLiftSolenoidCommand());
	liftUpButton->WhenPressed(new LiftUpCommand());
	dropDownButton->WhenPressed(new DropDownCommand());
	openGripButton->WhenPressed(new OpenGripCommand());
	closeGripButton->WhenPressed(new CloseGripCommand());
	ToggleGripButton->WhenPressed(new ToggleGripCommand());
}
float OI::GetDriveStickX()
{
	return driveJoystick->GetX();
}

float OI::GetDriveStickY()
{
	return driveJoystick->GetY();
}

float OI::GetDriveRotation()
{
	return driveJoystick->GetTwist();
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
